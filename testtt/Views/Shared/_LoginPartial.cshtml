@using Microsoft.AspNetCore.Identity
@inject SignInManager<Customer> SignInManager
@inject UserManager<Customer> UserManager

<ul class="navbar-nav">
    @{
        var userImageUrl = UserManager.GetUserAsync(User).Result.Cus_ImageUrl;
    }
@if (SignInManager.IsSignedIn(User))
{
        @if (userImageUrl != null)
        {
            <li class="nav-item">
                <img class="avatar rounded-circle" alt=" " src="@Url.Content(userImageUrl)" style="border-radius: 50%; width: 70px; height: 70px;" />
            </li>
        }
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
